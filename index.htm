<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Musicon - Convertisseur Audio</title>
    <style>
        body { font-family: Arial, sans-serif; text-align: center; margin: 20px; }
        .container { max-width: 600px; margin: auto; padding: 20px; border: 1px solid #ccc; border-radius: 10px; background-color: #f9f9f9; }
        .file-label { display: block; padding: 10px; background-color: #007BFF; color: white; cursor: pointer; margin-bottom: 10px; border-radius: 5px; }
        input[type="file"] { display: none; }
        button { padding: 10px; margin-top: 10px; border: none; cursor: pointer; border-radius: 5px; }
        #convertButton { background-color: #28a745; color: white; }
        #downloadAll { background-color: #ff9800; color: white; display: none; }
        ul { list-style: none; padding: 0; }
        li { margin-top: 10px; padding: 10px; background-color: #ddd; border-radius: 5px; display: flex; justify-content: space-between; align-items: center; }
    </style>
</head>
<body>
    <div class="container">
        <h1>Musicon ðŸŽµ</h1>
        <label for="fileInput" class="file-label">Importer un fichier ou un dossier</label>
        <input type="file" id="fileInput" multiple webkitdirectory>
        
        <select id="formatSelect">
            <option value="mp3">Convertir en MP3</option>
            <option value="wav">Convertir en WAV</option>
        </select>

        <button id="convertButton">Convertir</button>
        
        <h2>Fichiers convertis</h2>
        <ul id="convertedList"></ul>
        <button id="downloadAll">TÃ©lÃ©charger en ZIP</button>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.10.1/jszip.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/FileSaver.js/2.0.5/FileSaver.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@ffmpeg/ffmpeg@0.10.0/dist/ffmpeg.min.js"></script>

    <script>
        const { createFFmpeg, fetchFile } = FFmpeg;
        const ffmpeg = createFFmpeg({ log: true });
        let convertedFiles = [];

        document.getElementById("convertButton").addEventListener("click", async () => {
            if (!ffmpeg.isLoaded()) await ffmpeg.load();

            const files = document.getElementById("fileInput").files;
            const format = document.getElementById("formatSelect").value;
            if (files.length === 0) return alert("Veuillez importer des fichiers.");

            for (let file of files) {
                const inputName = file.name;
                const outputName = inputName.replace(/\.\w+$/, `.${format}`);

                ffmpeg.FS("writeFile", inputName, await fetchFile(file));
                await ffmpeg.run("-i", inputName, outputName);

                const data = ffmpeg.FS("readFile", outputName);
                const audioBlob = new Blob([data.buffer], { type: `audio/${format}` });
                const url = URL.createObjectURL(audioBlob);

                convertedFiles.push({ name: outputName, blob: audioBlob });

                const listItem = document.createElement("li");
                listItem.innerHTML = `${outputName} <a href="${url}" download="${outputName}">ðŸ“¥ TÃ©lÃ©charger</a>`;
                document.getElementById("convertedList").appendChild(listItem);
            }

            if (convertedFiles.length > 1) {
                document.getElementById("downloadAll").style.display = "block";
            }
        });

        document.getElementById("downloadAll").addEventListener("click", () => {
            const zip = new JSZip();
            convertedFiles.forEach(file => zip.file(file.name, file.blob));

            zip.generateAsync({ type: "blob" }).then(content => {
                saveAs(content, "converted_audio.zip");
            });
        });
    </script>
</body>
</html>